/* global wp, ernestGutenbergTableConfig */

'use strict';

const {
  useEffect,
  useState
} = wp.element;
const {
  registerBlockType
} = wp.blocks;
const {
  ToggleControl,
  PanelBody,
  Placeholder
} = wp.components;
const {
  InspectorControls,
  useBlockProps
} = wp.blockEditor || wp.editor;
registerBlockType('ernest/table', {
  title: ernestGutenbergTableConfig.i18n.title,
  description: ernestGutenbergTableConfig.i18n.description,
  category: 'widgets',
  attributes: {
    id: {
      type: 'boolean',
      default: true
    },
    fname: {
      type: 'boolean',
      default: true
    },
    lname: {
      type: 'boolean',
      default: true
    },
    email: {
      type: 'boolean',
      default: true
    },
    date: {
      type: 'boolean',
      default: true
    }
  },
  edit: ({
    attributes,
    setAttributes
  }) => {
    const {
      id,
      fname,
      lname,
      email,
      date
    } = attributes;
    const [tableData, setTableData] = useState([]);
    function fetchData() {
      wp.ajax.post('ernest_get_table', {}).done(function (response) {
        setTableData(response);
      });
    }
    function MyTable(data) {
      const headersToInclude = {
        'ID': id,
        'First Name': fname,
        'Last Name': lname,
        'Email': email,
        'Date': date
      };
      const headers = data.headers.filter(header => headersToInclude[header]);
      const rows = Object.keys(data.rows).map(key => {
        const row = data.rows[key];
        return React.createElement("tr", {
          key: key
        }, id && React.createElement("td", null, row.id), fname && React.createElement("td", null, row.fname), lname && React.createElement("td", null, row.lname), email && React.createElement("td", null, row.email), date && React.createElement("td", null, new Date(row.date * 1000).toLocaleString()));
      });
      const headerCells = headers.map((header, index) => React.createElement("th", {
        key: index
      }, header));
      return React.createElement("div", null, React.createElement("table", null, React.createElement("thead", null, React.createElement("tr", null, headerCells)), React.createElement("tbody", null, rows)));
    }
    const toggleAttribute = attribute => value => {
      setAttributes({
        [attribute]: value
      });
    };
    useEffect(() => {
      fetchData();
    }, []);
    return React.createElement("div", {
      className: "wp-block-table"
    }, React.createElement("h1", null, "Ernest API Table edit"), tableData.headers ? React.createElement(MyTable, {
      headers: tableData.headers,
      rows: tableData.rows
    }) : React.createElement("p", null, ernestGutenbergTableConfig.i18n.loading), React.createElement(InspectorControls, null, React.createElement(PanelBody, {
      title: "Settings"
    }, React.createElement(ToggleControl, {
      label: "Display ID column",
      checked: id,
      onChange: toggleAttribute('id')
    }), React.createElement(ToggleControl, {
      label: "Display First Name column",
      checked: fname,
      onChange: toggleAttribute('fname')
    }), React.createElement(ToggleControl, {
      label: "Display Last Name column",
      checked: lname,
      onChange: toggleAttribute('lname')
    }), React.createElement(ToggleControl, {
      label: "Display Email column",
      checked: email,
      onChange: toggleAttribute('email')
    }), React.createElement(ToggleControl, {
      label: "Display Date column",
      checked: date,
      onChange: toggleAttribute('date')
    }))));
  },
  save(props) {
    const {
      attributes: {
        id,
        fname,
        lname,
        email,
        date
      }
    } = props;
    const dataAttributes = {
      id: id,
      firstName: fname,
      lastName: lname,
      email: email,
      date: date
    };
    return React.createElement("div", {
      className: "wp-block-table"
    }, React.createElement("h1", null, "Ernest API Table"), React.createElement("table", {
      className: "ernest",
      "data-columns": JSON.stringify(dataAttributes)
    }));
  }
});